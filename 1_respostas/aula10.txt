1) Ic = B * Ib
   4 = 100 * Ib
   Ib= 0,04 A
A corrente é maior que a corrente permitida, sendo assim é necessario usar um Par Darlington

  Ic= B^2 * Ib
  4 = 100 ^2 * Ib
  Ib= 0,0004

Rb = ( Vcc - 2*Vbe)/ Ib
Rb = ( 3 - 2*(0,7))/ 0,0004
Rb = 4000 

2) Ic = B * Ib
   1 = 120 * Ib
   Ib = 0,0083 A (ok)

  Rb = (Vcc - Vbe)/ Ib
  Rb= (3,5 - 0,7)/ 0,00083
  Rb= 337,35

3)
        P1.0----------------------------
			(L3 ~ L4)
	P1.1--------------------- (L5 ~ L6)  
		(L1 ~L2)
	P1.2----------------------------

        Para acender L1 -> P1.1 = 1; P1.2 = 0; P1.0 = entrada digital
	Para acender L2 -> P1.1 = 0; P1.2 = 1; P1.0 = entrada digital

	Para acender L3 -> P1.0 = 1; P1.1 = 0; P1.2 = entrada digital
	Para acender L4 -> P1.0 = 0; P1.1 = 1; P1.2 = entrada digital

	Para acender L5 -> P1.0 = 1; P1.2 = 0; P1.1 = entrada digital
	Para acender L6 -> P1.0 = 0; P1.2 = 1; P1.1 = entrada digital
4)
void main(void)

{

	while(1)
	{
	P1DIR |= (BIT2 + BIT1); //Define P1.1 e P1.2 como saída e P1.0 como entrada
	P1DIR &= ~BIT0;
	P1OUT |= BIT1;  //Acende o L1
	P1OUT &= ~BIT2;	
	P1OUT |= BIT2;	//Acende o L2
	P1OUT &= ~BIT1;

	P1DIR |= (BIT0 + BIT1); //Define P1.1 e P1.0 como saída e P1.2 como entrada
	P1DIR &= ~BIT2;
	P1OUT |= BIT0;  //Acende o L3
	P1OUT &= ~BIT1;	
	P1OUT |= BIT1;  //Acende o L4
	P1OUT &= ~BIT0; 

	P1DIR |= (BIT0 + BIT2); //Define P1.0 e P1.2 como saída e P1.1como entrada
	P1DIR &= ~BIT1;
	P1OUT |= BIT0;  //Acende o L5
	P1OUT &= ~BIT2;	
	P1OUT |= BIT2;  //Acende o L6
	P1OUT &= ~BIT0; 
	}
	
}
5)
while(1)
	{
	P1DIR |= (BIT2 + BIT1); //Define P1.1 e P1.2 como saída e P1.0 como entrada
	P1DIR &= ~BIT0;
	P1OUT |= BIT1;  //Acende o L1
	P1OUT &= ~BIT2;	
	P1OUT |= BIT2;	//Acende o L2
	P1OUT &= ~BIT1;

	atraso(0xffff);

	P1DIR |= (BIT0 + BIT1); //Define P1.1 e P1.0 como saída e P1.2 como entrada
	P1DIR &= ~BIT2;
	P1OUT |= BIT0;  //Acende o L3
	P1OUT &= ~BIT1;	
	P1OUT |= BIT1;  //Acende o L4
	P1OUT &= ~BIT0; 
	
	atraso(0xffff);

	P1DIR |= (BIT0 + BIT2); //Define P1.0 e P1.2 como saída e P1.1como entrada
	P1DIR &= ~BIT1;
	P1OUT |= BIT0;  //Acende o L5
	P1OUT &= ~BIT2;	
	P1OUT |= BIT2;  //Acende o L6
	P1OUT &= ~BIT0; 

	atraso(0xffff);
	}
	
}



