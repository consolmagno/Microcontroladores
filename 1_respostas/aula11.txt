1)
void Atraso(volatile unsigned int x){
    TACCR0= 1000-1;
    TACTL |= TACLR;
    TACTL = TASSEL_2 + ID_3 + MC_1;
    while (x>0){
    x--;
    while((TACTL & TAIFG)==0);{
    TACTL &=~TAIFG;
    }
    }
}
int main (void){
    WDTCTL = WDTPW + WDTHOLD;

    BCSCTL1 = CALBC1_1MHZ;
    DCOCTL = CALDCO_1MHZ;
    return 0;
}

2) Atraso = 1/100 = 10 ms

#include <msp430.h> 
#define LED1 BIT0
#define LED2 BIT6
#define LEDS (BIT0 + BIT6)


int main (void){
    WDTCTL = WDTPW + WDTHOLD;

    BCSCTL1 = CALBC1_1MHZ;
    DCOCTL = CALDCO_1MHZ;
    P1OUT&=~LEDS;
    P1DIR|=LEDS;
    TACCR0=5000-1;
    TACTL = TASSEL_2 + ID_1+ MC_1;
            while (1){
                while ((TACTL&TAIFG)==0);
                P1OUT^=LEDS;
                TACTL &=~TAIFG;
            }
    return 0;
}

3) Atraso = 1/20 = 50 ms

#include <msp430.h> 
#define LED1 BIT0
#define LED2 BIT6
#define LEDS (BIT0 + BIT6)


int main (void){
    WDTCTL = WDTPW + WDTHOLD;

    BCSCTL1 = CALBC1_1MHZ;
    DCOCTL = CALDCO_1MHZ;
    P1OUT&=~LEDS;
    P1DIR|=LEDS;
    TACCR0=25000-1;
    TACTL = TASSEL_2 + ID_1+ MC_1;
            while (1){
                while ((TACTL&TAIFG)==0);
                P1OUT^=LEDS;
                TACTL &=~TAIFG;
            }
    return 0;
}

4) Atraso = 1/1 = 1 s ou 1000 ms

#include <msp430.h> 
#define LED1 BIT0
#define LED2 BIT6
#define LEDS (BIT0 + BIT6)


int main (void){
    WDTCTL = WDTPW + WDTHOLD;

    BCSCTL1 = CALBC1_1MHZ;
    DCOCTL = CALDCO_1MHZ;
    P1OUT&=~LEDS;
    P1DIR|=LEDS;
    TACCR0=62500-1;
    TACTL = TASSEL_2 + ID_3+ MC_1;
            while (1){
                while ((TACTL&TAIFG)==0);
                P1OUT^=LEDS;
                TACTL &=~TAIFG;
            }
    return 0;
}

5) Atraso = 1/0,5 = 2 s ou 2000 ms

#include <msp430.h> 
#define LED1 BIT0
#define LED2 BIT6
#define LEDS (BIT0 + BIT6)


int main (void){
    WDTCTL = WDTPW + WDTHOLD;

    BCSCTL1 = CALBC1_1MHZ;
    DCOCTL = CALDCO_1MHZ;
    P1OUT&=~LEDS;
    P1DIR|=LEDS;
    TACCR0=62500-1;
    TACTL = TASSEL_2 + ID_3+ MC_3;
            while (1){
                while ((TACTL&TAIFG)==0);
                P1OUT^=LEDS;
                TACTL &=~TAIFG;
            }
    return 0;
}

6)
#include <msp430.h> 
#define LED1 BIT0
#define LED2 BIT6
#define LEDS (BIT0 + BIT6)


int main (void){
    WDTCTL = WDTPW + WDTHOLD;

    BCSCTL1 = CALBC1_1MHZ;
    DCOCTL = CALDCO_1MHZ;
    P1OUT&=~LEDS;
    P1DIR|=LEDS;
    TA0CCR0=5000-1;
    TA0CTL = TASSEL_2 + ID_3+ MC_1 +TAIE;
    _BIS_SR(LPM0_bits+GIE);
    return 0;}

enable_interrupt();

#pragma vector = TIMER0_A1_VECTOR

__interrupt void TA0_ISR(void)
        {
    P1OUT ^=LEDS;
    TA0CTL &=~TAIFG;
        }

Questão 5:

#include <msp430.h> 
#define LED1 BIT0
#define LED2 BIT6
#define LEDS (BIT0 + BIT6)


int main (void){
    WDTCTL = WDTPW + WDTHOLD;

    BCSCTL1 = CALBC1_1MHZ;
    DCOCTL = CALDCO_1MHZ;
    P1OUT&=~LEDS;
    P1DIR|=LEDS;
    TA0CCR0=62500-1;
    TA0CTL = TASSEL_2 + ID_3+ MC_3 +TAIE;
    _BIS_SR(LPM0_bits+GIE);
    return 0;}

enable_interrupt();

#pragma vector = TIMER0_A1_VECTOR

__interrupt void TA0_ISR(void)
        {
    P1OUT ^=LEDS;
    TA0CTL &=~TAIFG;
        }

7)

void paralelo_para_serial(void)
{
    int i, A;
    A = P1IN;
    P1OUT |= BIT0;
    Atraso(1);
    for (i=0; i<8; i++)
    {
        P2OUT=A;
        Atraso(1);
        (A>>i);
    }
}

void Atraso(volatile unsigned int x)
{
    TACCR0= 1000-1;
    TACTL |= TACLR;
    TACTL = TASSEL_2 + ID_0 + MC_1;
    while (x>0)
    {x--;
    while((TACTL & TAIFG)==0);
    {TACTL &=~TAIFG;}
}
    TACTL = MC_0;
}

int main(void){
    WDTCTL = WDTPW + WDTHOLD;
    BCSCTL1 = CALBC1_1MHZ;
    DCOCTL = CALDCO_1MHZ;
    P1DIR = 0;
    P2OUT = 0;
    P2DIR |= BIT0;
    while (1)
    {
        paralelo_para_serial();
    }
    return 0;
}

8) 
9)